<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!--1 .激活 @Required @Autowired JSR 250`s @PostConstruts, preDistroy and 
		@Resource 等注解 激活了spring的annotation的DI -->
	<context:annotation-config />

	<!-- 2. spring mvc 相关配置 需要springMVC管理的controller代码 -->
	<context:component-scan
		base-package="cn.org.kkl">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!--3. HandlerMapping 无需配置，springmvc可以默认启动 DefaultAnnotationHandlerMapping 
		annotation-driver HandlerMapping -->

	<!-- 使dispatcherServlet启用基于annotation的handlerMapping 扩充了注解驱动，可以将请求参数绑定（映射）到控制器方法参数 -->
	<mvc:annotation-driven />

	<!--spring mvc 静态资源交由web容器进行默认处理 -->
	<!-- <mvc:default-servlet-handler/> -->
	<!-- 另外一种处理静态资源的配置 ,此种配置可以将静态资源放在项目中的任意位置， 在需要时可以根据${pageContext.request.contextPath}/resources/background.png方式获取 -->
	<mvc:resources location="/resources/*"
		mapping="/resources/**" />

	<!-- springMVC视图解析器的配置，可以使用多个viewResolver。可以使用order可指定执行顺序， InternalResourceViewResolver视图解析器必定会返回一个对象，有可能不是我们需要的，所以要将其放在最后 
		即之前的视图解析器都无法解析，最终交给他来处理，必定会有个结果 -->
	 <!-- 配置ViewResolver。 可以用多个ViewResolver。 使用order属性排序。 InternalResourceViewResolver放在最后。 -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="order" value="1"/>
        <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json"/>
                <entry key="xml" value="application/xml"/>
                <entry key="htm" value="text/html"/>
            </map>
        </property>

        <property name="defaultViews">
            <list>
                <!-- JSON View -->
                <bean
                        class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
                </bean>
            </list>
        </property>
    </bean>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsps/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!--文件上传的配置 -->
	<bean
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="resolveLazily" value="true" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="maxUploadSize" value="209715200" />
	</bean>

</beans>